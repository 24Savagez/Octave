% Load a binary matrix that only contains 1 lineIm = [0 0 1 0 0 0 0 0 0 0 0 0 0 0;...      0 0 0 1 0 0 0 0 0 0 0 0 0 0;...      0 0 0 0 1 0 0 0 0 0 0 0 0 0;...      0 0 0 0 0 1 0 0 0 0 0 0 0 0;...      0 0 0 0 0 0 1 0 0 0 0 0 0 0;...      0 0 0 0 0 0 0 1 0 0 0 0 0 0;...      0 0 0 0 0 0 0 0 1 0 0 0 0 0;...      0 0 0 0 0 0 0 0 0 1 0 0 0 0;...      0 0 0 0 0 0 0 0 0 0 1 0 0 0;...      0 0 0 0 0 0 0 0 0 0 0 1 0 0];  %% set up variables for hough transform% Get the angular sampling frequency (in radian)theta_sample = 0.1;                                             %Get image size[nbrow, nbcol] = size(Im);% Get the row limit [0 to Sqrt(nbrow^2+nbcol^2)rho_lim = sqrt(nbrow^2+nbcol^2);% set the sampling of rho with a step of 1rho_samp = (-rho_lim:1:rho_lim);% Set the angle samplingtheta = (0:theta_sample:pi);% Check the length of theta thetas_length = length(theta);% Check the size of rhosrhos_length = length(rho_samp);% Create the Hough accumulatorhough_accumulator = zeros(rhos_length, thetas_length);% Calculate the hough transform on pixels with values 1%% perform hough transform% Go through every pixel of the imagefor i = 1:nbrow    for j = 1:nbcol      % Check is the pixel has a value of 1 (image must be binary)        if Im(i, j) == 1           % Calculate all the rho = i * cos(theta) + j sin(theta)            % Go through all the theta sample values            for theta_index = 1:thetas_length              % Get the angular value from the theta variable (from 0 to pi)                th = theta(theta_index);                % Calculate the rho value                r  = i * cos(th) + j * sin(th);                % Get the rho index value                rho_index = round(r + rhos_length/2);                   % Increment the Hough accumulator at location rho_index, theta_index                hough_accumulator(rho_index, theta_index) = ...                     hough_accumulator(rho_index, theta_index) + 1;            end        end    endend  % Display the Hough accumulator%% show hough transformfigure(1)% Use imagesc function to display itimagesc(theta, rho_samp, hough_accumulator);title('Hough Accumulator');xlabel('Theta (radians)');ylabel('Rho (pixels)');colormap('colormap');Maxvalue = max(max(hough_accumulator));[locationCol,locationRow] = find(hough_accumulator == Maxvalue);foundrho = rho_samp(locationCol(1)-1);foundtheta = theta(locationRow(1)-1);foundrho2 = rho_samp(locationCol(1));foundtheta2 = theta(locationRow(1));a = -((cos(foundtheta))/(sin(foundtheta)));b = foundrho/(sin(foundtheta));a2 = -((cos(foundtheta2))/(sin(foundtheta2)));b2 = foundrho/(sin(foundtheta2));x = [1:14];for i = 1:numel(x)  y(i)=round(a*i+b);  y2(i)=round(a2*i+b2);endforfigure(2)hold onimshow(Im)plot(x,y,"*g");plot(x,y2,"*y");hold off
  
