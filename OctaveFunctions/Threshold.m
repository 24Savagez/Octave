% Load image packagepkg load image% clear all variables and close all figuresclear all; close all% Load an image using dialog box function uigetfile% uigetfile function to get the file path and file name[filename, filepath]=uigetfile({"*.png;*.jpg","Choose cameraman image to load"});% load the image using file path and file name put into squared bracked and separated with a comma ,I = imread([filepath,filename]);% Get the histogram of an imagefigure(1)subplot(1,2,1)imshow(I)title('Original image')subplot(1,2,2)imhist(I);title('Histogram of original image')% Apply binarisation without providing thresholdJ = im2bw (I);% Manually input threshold value (between 0 and 255manualthreshold = input('Select a threshold value (btw 0 and 255): ');% Convert this value between 0 and 1 (as im2bw only accept such value)convertedthreshold = manualthreshold/255;% Apply this threshold valueJ2= im2bw(I, convertedthreshold);% Displaying images that have been loadedfigure(2)subplot(1,3,1)imshow(I)title('Original image')subplot(1,3,2)imshow(J)title('Basic binarization')subplot(1,3,3)imshow(J2)title('Manual threshold')% Apply histogram equalizationEqI = histeq(I);figure(3)subplot(1,2,1)imshow(I)title('Original image')subplot(1,2,2)imshow(EqI)title('Equalized histogram')% Show the two histogram (normal image and equalized histogram)figure(4)subplot(1,2,1)imhist(I)title('Original histogram')subplot(1,2,2)imhist(EqI)title('Equalized histogram')% Fill holes in region of imageHolesfilled = imfill (J, "holes");figure(5)subplot(1,2,1)imshow(J)title('Basic binarization')subplot(1,2,2)imshow(Holesfilled)title('Hole filled')% Find circle[centers, radii] = imfindcircles (I, [10 50]);% Show resultsfigure(6)imshow(I)viscircles (centers, radii)title('Detected circles')% Find connected pixelcc = regionprops (Holesfilled, 'all');% Outlines the centroid locationscentroids = cat(1, cc.Centroid);figure(7)imshow(I)hold onplot(centroids(:,1), centroids(:,2), 'b*')title('Centroids displayed')hold off% Display the bounding boxes around the group of pixelsboundingbox = bwboundaries(Holesfilled);figure(8)imshow(I)hold onfor k = 1:numel(boundingbox)  plot(boundingbox{k}(:, 2), boundingbox{k}(:, 1), 'r', 'linewidth', 2);endfortitle('Boundaries displayed')hold off% Clear the pixel elements at the border of an imageBWnobord = imclearborder(Holesfilled, 4);figure(9)subplot(1,2,1)imshow(I)title('Original image')subplot(1,2,2)imshow(BWnobord)title('Bordered pixels removed')% create a motion filterh = fspecial("motion");h2 = fspecial("unsharp");% Apply the motion filterJmot = imfilter(I,h);% Apply the unsharp filterJunsharp = imfilter(Jmot, h2);% Display the resultsfigure (10)subplit(1,3,1)imshow(I)title('Original image')subplot(1,3,2)imshow(Jmot)title('Motioned image')subplot(1,3,3)imshow(Junsharp)title('Unsharped image')